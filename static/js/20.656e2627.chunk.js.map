{"version":3,"file":"static/js/20.656e2627.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/render/dom/resize/handle-window.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","../node_modules/framer-motion/dist/es/render/dom/resize/index.mjs","../node_modules/framer-motion/dist/es/value/use-scroll.mjs","../node_modules/framer-motion/dist/es/value/use-spring.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","components/Case.js","components/CasePage.js"],"sourcesContent":["import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","import { progress } from '../../../utils/progress.mjs';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { namedEdges, resolveEdge } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","import { calcInset } from './inset.mjs';\nimport { ScrollOffset } from './presets.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { interpolate } from '../../../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../../../utils/offsets/default.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction resolveOffsets(container, info, options) {\n    let { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : { width: target.clientWidth, height: target.clientHeight };\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition));\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    let inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n            const { top, left } = current.getBBox();\n            inset.x += left;\n            inset.y += top;\n            /**\n             * Assign the next parent element as the <svg /> tag.\n             */\n            while (current && current.tagName !== \"svg\") {\n                current = current.parentNode;\n            }\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\nimport { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scroll(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.update(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scroll };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useEffect } from 'react';\nimport { warning } from '../utils/errors.mjs';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction refWarning(name, ref) {\n    warning(Boolean(!ref || ref.current), `You have defined a ${name} options but the provided ref is not yet hydrated, probably because it's defined higher up the tree. Try calling useScroll() in the same component as the ref, or setting its \\`layoutEffect: false\\` option.`);\n}\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll({ container, target, layoutEffect = true, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const useLifecycleEffect = layoutEffect\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useLifecycleEffect(() => {\n        refWarning(\"target\", target);\n        refWarning(\"container\", container);\n        return scroll(({ x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n            target: (target === null || target === void 0 ? void 0 : target.current) || undefined,\n        });\n    }, []);\n    return values;\n}\n\nexport { useScroll };\n","import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/animators/js/index.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { millisecondsToSeconds } from '../utils/time-conversion.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            stopAnimation();\n            activeSpringAnimation.current = animateValue({\n                keyframes: [value.get(), v],\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                restDelta: 0.001,\n                restSpeed: 0.01,\n                ...config,\n                onUpdate: set,\n            });\n            /**\n             * If we're between frames, resync the animation to the frameloop.\n             */\n            if (!frameData.isProcessing) {\n                const delta = performance.now() - frameData.timestamp;\n                if (delta < 30) {\n                    activeSpringAnimation.current.time =\n                        millisecondsToSeconds(delta);\n                }\n            }\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import React from \"react\";\r\nimport goals from \"../assets/images/goals.jpg\";\r\nimport achievements from \"../assets/images/achievements.jpg\";\r\nimport { motion, useScroll, useSpring } from \"framer-motion\";\r\n\r\nconst Case = (props) => {\r\n  const { scrollYProgress } = useScroll();\r\n\r\n  const scaleX = useSpring(scrollYProgress, {\r\n    stiffness: 100,\r\n    damping: 30,\r\n    restDelta: 0.001,\r\n  });\r\n\r\n  return (\r\n    <motion.section\r\n      className=\"case-study z1\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{\r\n        duration: 0.5,\r\n      }}\r\n    >\r\n      <motion.div className=\"progress-bar\" style={{ scaleX }} />\r\n      {/*Come Back here */}\r\n      <div className=\"img-container\">\r\n        <div className=\"mask\"></div>\r\n        <img src={props.titleImg} alt=\"title\" className=\"title-img img-fluid\" />\r\n        <h1 className=\"main-title\">{props.title}</h1>\r\n      </div>\r\n      <div className=\"container my-4\">\r\n        <h2 className=\"sub-title\">Project Overview</h2>\r\n        <p className=\"regular-text\">{props.description}</p>\r\n      </div>\r\n\r\n      <div className=\"img-container my-4\">\r\n        <div className=\"mask\"></div>\r\n        <img src={goals} alt=\"goals\" className=\"goals-img img-fluid\" />\r\n        <div className=\"absolute-container\">\r\n          <div className=\"container\">\r\n            <h2 className=\"sub-title abs-sub-title\">Goals</h2>\r\n            <div className=\"row button-container m-3\">\r\n              {props.goals.map((e, i) => (\r\n                <motion.button\r\n                  key={`${props.title + e}`}\r\n                  className=\"button-text style-button col-md-auto mx-auto mt-3\"\r\n                  initial={{ opacity: 0, translateY: 50 }}\r\n                  animate={{ opacity: 1, translateY: 0 }}\r\n                  transition={{\r\n                    opacity: {\r\n                      duration: 0.5,\r\n                      delay: i * 0.5\r\n                    },\r\n                    translateY: {\r\n                      duration: 0.5,\r\n                      delay: i * 0.5,\r\n                    },\r\n                  }}\r\n                  whileHover={{\r\n                    scale: 1.1,\r\n                    textShadow: \"0px 0px 4px gray\",\r\n                  }}\r\n                >\r\n                  {e}\r\n                </motion.button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-4\">\r\n        <h2 className=\"sub-title\">Tech Stack</h2>\r\n        <ul>\r\n          {props.tech.map((e) => (\r\n            <li className=\"tech regular-text\" key={`${props.title + e}`}>\r\n              {e}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"img-container my-4\">\r\n        <div className=\"mask\"></div>\r\n        <img\r\n          src={achievements}\r\n          alt=\"achievements\"\r\n          className=\"achievements-img img-fluid\"\r\n        />\r\n        <div className=\"absolute-container\">\r\n          <div className=\"container\">\r\n            <h2 className=\"sub-title abs-sub-title\">Achievements</h2>\r\n            <div className=\"row button-container m-3\">\r\n              {props.achievements.map((e, i) => (\r\n                <motion.button\r\n                  className=\"achievement button-text style-button col-md-auto mx-auto mt-3\"\r\n                  key={`${props.title + e}`}\r\n                  initial={{ opacity: 0, translateY: 50 }}\r\n                  animate={{ opacity: 1, translateY: 0 }}\r\n                  transition={{\r\n                    opacity: {\r\n                      duration: 0.5,\r\n                      delay: i * 0.5\r\n                    },\r\n                    translateY: {\r\n                      duration: 0.5,\r\n                      delay: i * 0.5,\r\n                    },\r\n                  }}\r\n                  whileHover={{\r\n                    scale: 1.1,\r\n                    textShadow: \"0px 0px 4px gray\",\r\n                  }}\r\n                >\r\n                  {e}\r\n                </motion.button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container mt-3 pb-3 website-links-container\">\r\n        <h2 className=\"sub-title\">Links To Website</h2>\r\n        <h6 className=\"links-title\">Live Site</h6>\r\n        <a href={props.live} className=\"regular-text links\">\r\n          {props.live}\r\n        </a>\r\n        <h6 className=\"links-title pt-3\">Github</h6>\r\n        <a href={props.github} className=\"regular-text links\">\r\n          {props.github}\r\n        </a>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Case;\r\n","import React, {useRef, useEffect} from \"react\";\r\nimport Case from \"./Case.js\";\r\n\r\n\r\nconst CasePage = ({caseData}) => {\r\n  const caseRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (caseRef.current) {\r\n      const scrollOffset = caseRef.current.offsetTop - 81;\r\n      window.scrollTo({ top: scrollOffset, behavior: \"smooth\" });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"case-page\" ref={caseRef}>\r\n        <Case\r\n          id={`${caseData.title}`}\r\n          key={caseData.title}\r\n          title={caseData.title}\r\n          titleImg={caseData.titleImg}\r\n          description={caseData.description}\r\n          goals={caseData.goals}\r\n          tech={caseData.tech}\r\n          achievements={caseData.achievements}\r\n          live={caseData.live}\r\n          github={caseData.github}\r\n        />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CasePage;\r\n"],"names":["observer","resizeHandlers","WeakMap","notifyTarget","_ref","_a","target","contentRect","borderBoxSize","get","forEach","handler","contentSize","size","_borderBoxSize$","width","inlineSize","height","blockSize","SVGElement","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elements","scope","selectorCache","root","document","invariant","Boolean","current","querySelectorAll","Element","Array","from","resolveElements","element","elementHandlers","Set","set","add","observe","delete","unobserve","windowResizeHandler","windowCallbacks","resizeWindow","callback","window","innerWidth","innerHeight","info","addEventListener","undefined","maxElapsed","createScrollInfo","time","x","offset","progress","scrollLength","targetOffset","targetLength","containerLength","velocity","y","keys","length","position","updateAxisInfo","axisName","axis","_keys$axisName","prev","prevTime","elapsed","velocityPerSecond","ScrollOffset","Enter","Exit","Any","All","namedEdges","start","center","end","resolveEdge","edge","inset","arguments","delta","asNumber","parseFloat","endsWith","documentElement","clientWidth","clientHeight","defaultOffset","resolveOffset","targetInset","offsetDefinition","isArray","trim","includes","split","point","resolveOffsets","container","options","_options$offset","_options$target","_options$axis","lengthLabel","HTMLElement","offsetLeft","offsetTop","offsetParent","SVGGraphicsElement","_current$getBBox","top","left","tagName","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","containerSize","hasChanged","interpolate","numOffsets","i","interpolatorOffsets","_toConsumableArray","createOnScrollHandler","onScroll","measure","node","update","updateScrollInfo","notify","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scroll","_ref$container","_objectWithoutProperties","_excluded","containerHandlers","a","b","containerHandler","has","measureAll","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","updateAll","_step2","_iterator2","frameData","_step3","_iterator3","listener","frame","passive","cancelFrame","currentHandlers","scrollListener","removeEventListener","refWarning","name","ref","warning","concat","createScrollMotionValues","scrollX","motionValue","scrollY","scrollXProgress","scrollYProgress","useSpring","source","config","isStatic","useContext","MotionConfigContext","activeSpringAnimation","useRef","initial","useConstant","_useState","useState","setLatest","_slicedToArray","useEffect","on","useMotionValue","isMotionValue","stopAnimation","stop","useInsertionEffect","attach","v","animateValue","_objectSpread","keyframes","getVelocity","type","restDelta","restSpeed","onUpdate","performance","now","millisecondsToSeconds","JSON","stringify","useIsomorphicLayoutEffect","props","_useScroll","_ref$layoutEffect","layoutEffect","values","_ref2","useScroll","scaleX","stiffness","damping","_jsxs","motion","className","opacity","animate","transition","duration","children","_jsx","style","src","titleImg","alt","title","description","goals","map","translateY","delay","whileHover","scale","textShadow","tech","achievements","href","live","github","caseData","caseRef","scrollOffset","scrollTo","behavior","Case","id"],"sourceRoot":""}